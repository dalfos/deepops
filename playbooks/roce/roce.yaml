---
# Install Mellanox OFED
- import_playbook: mofed-install.yaml
  run_once: true
  vars:
    mofed_site_place: "MLNX_OFED-4.6-1.0.1.1"
    mofed_file_name: "MLNX_OFED_LINUX-4.6-1.0.1.1-ubuntu18.04-x86_64.iso"
  tags:
    - mellanox_ofed

# Activate VF for relevant PF
- hosts: kube-node
  become: true
  become_method: sudo
  tasks:
    - name: checking the Mellanox OFED is installed
      stat:
        path: /usr/bin/ofed_info
      register: ofed_present
    - name: Check that rc.local exist
      stat:
        path: /etc/rc.local      
      when: ofed_present.stat.exists 
      register: stat_result
    - name: Create the file, if it does not present
      file:
        path: /etc/rc.local
        state: touch
        mode: 0755
      when: stat_result.stat.exists == False 
    - include_tasks: vf-activate.yaml
      with_items:
        - "{{ pf1 }}"
        - "{{ pf2 }}"
        - "{{ pf3 }}"
        - "{{ pf4 }}"
        - "{{ pf5 }}"
        - "{{ pf6 }}"
        - "{{ pf7 }}"
        - "{{ pf8 }}"
      when: ofed_present.stat.exists
  tags:
    - vf_activation

#Install Mellanox GPUDirect - WIP

#Install python dependencies
- hosts: kube-master
  become: true
  become_method: sudo
  tasks:
    - pip:
        name: openshift
    - name: check for module openshift
      python_requirements_facts:
        dependencies: 
          - openshift
  tags:
    - dep_openshift

#Download K8s SRIOV DP image
- hosts: kube-node
  become: true
  become_method: sudo
  tasks:
    - pip:
        name: docker-py
    - name: Pull docker image nfvpe/sriov-device-plugin
      docker_image: 
        name: "nfvpe/sriov-device-plugin"
        state: present
        pull: yes
    - name: Pull docker image nfvpe/sriov-cni
      docker_image: 
        name: "nfvpe/sriov-cni"
        state: present
        pull: yes
  tags:
    - pull_k8s_dp_docker

#Install Mellanox device plugin for K8s
- import_playbook: k8s-sriov-device-plugin.yaml
  vars:
    config_json:
      resourceList:
      - resourceName: sriov_111
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf1 }}"
      - resourceName: sriov_112
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf2 }}"
      - resourceName: sriov_113
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf3 }}"
      - resourceName: sriov_114
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf4 }}"
      - resourceName: sriov_115
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf5 }}"
      - resourceName: sriov_116
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf6 }}"
      - resourceName: sriov_117
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf7 }}"
      - resourceName: sriov_118
        isRdma: true
        selectors:
          vendors:
          - 15b3
          devices:
          - "{{ dev_id }}"
          pfNames:
          - "{{ pf8 }}"
  tags:
    - k8s_sriov_device_plugin

#Install SRIOV CNI
- import_playbook: k8s-sriov-cni-ds.yaml

#Install DHCP CNI
- import_playbook: k8s-dhcp-cni-ds.yaml

#Add network definition for vlan's
- hosts: kube-master
  become: true
  become_method: sudo
  tasks:
    - include_tasks: nad4roce.yaml
      name: Add NAD
      with_items:
        - { network_name: sriov111, res_name: intel.com/sriov_111, vlan_id: 3001 }
        - { network_name: sriov112, res_name: intel.com/sriov_112, vlan_id: 3002 }
        - { network_name: sriov113, res_name: intel.com/sriov_113, vlan_id: 3003 }
        - { network_name: sriov114, res_name: intel.com/sriov_114, vlan_id: 3004 }
        - { network_name: sriov115, res_name: intel.com/sriov_115, vlan_id: 3005 }
        - { network_name: sriov116, res_name: intel.com/sriov_116, vlan_id: 3006 }
        - { network_name: sriov117, res_name: intel.com/sriov_117, vlan_id: 3007 }
        - { network_name: sriov118, res_name: intel.com/sriov_118, vlan_id: 3008 }
  tags:
    - k8s_mlnx_network_definition

#Install Kubeflow MPI-Operator:v1alpha2
- import_playbook: mpi-operator.yaml

# Mulus update
- hosts: kube-master
  become: true
  become_method: sudo
  tasks:
    - name: Multus update
      k8s:
        state: present
        definition: "{{ lookup('url', 'https://raw.githubusercontent.com/Mellanox/deepops/roce_backend/playbooks/roce/multus-ds-update.yaml', split_lines=False) }}"
      run_once: true
    - pause:
        minutes: 5
  tags:
    - k8s_multus_update
